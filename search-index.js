var searchIndex = {};
searchIndex["packed"] = {"doc":"A safe approach to using `#[repr(packed)]` data.","items":[[5,"is_aligned_for","packed","Determines whether a pointer or reference is correctly aligned for type `T`.",null,null],[5,"is_aligned_for_slice","","Determines whether a slice is correctly aligned for type `T`.",null,null],[5,"size_of_slice","","Calculates the total byte size of a slice.",null,null],[6,"Un","","A type alias that represents the unaligned type of `T`.",null,null],[8,"Unaligned","","A marker trait indicating that a type has an alignment of `1`.",null,null],[8,"Aligned","","A trait for converting types with alignments greater than `1`\ninto their unaligned equivalent.",null,null],[16,"Unaligned","","An unaligned representation of this type. Usually a u8 array of the\nsame size.",0,null],[11,"is_aligned","","Determines whether an unaligned representation of this type is aligned.",0,{"inputs":[{"name":"unaligned"}],"output":{"name":"bool"}}],[11,"as_unaligned","","Borrows the value as unaligned.",0,null],[11,"as_unaligned_mut","","Mutably borrows the value as unaligned.",0,null],[11,"from_unaligned_ref","","Borrows an unaligned type as an aligned value.",0,{"inputs":[{"name":"unaligned"}],"output":{"name":"option"}}],[11,"from_unaligned_mut","","Mutably borrows an unaligned type as an aligned value.",0,{"inputs":[{"name":"unaligned"}],"output":{"name":"option"}}],[11,"from_unaligned_unchecked","","Borrows an unaligned type as an aligned value, without first checking the alignment.",0,{"inputs":[{"name":"unaligned"}],"output":{"name":"self"}}],[11,"from_unaligned_mut_unchecked","","Mutably borrows an unaligned type as an aligned value, without first checking the alignment.",0,{"inputs":[{"name":"unaligned"}],"output":{"name":"self"}}],[11,"into_unaligned","","Converts a value to its unaligned representation without dropping `self`.",0,null],[11,"from_unaligned","","Creates a value from its unaligned representation.",0,{"inputs":[{"name":"unaligned"}],"output":{"name":"self"}}],[8,"Packed","","A marker trait indicating that a type is `#[repr(packed)]`.",null,null]],"paths":[[8,"Aligned"]]};
initSearch(searchIndex);
